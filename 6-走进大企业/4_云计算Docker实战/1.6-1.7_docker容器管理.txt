1. 创建一个容器命令，使用docker create（注意：镜像不能是从模板导入进来的）
    # docker create -it centos
    # cat centos-6-x86-minimal.tar.gz | docker import - cent6x86
        a63844a74982ec3ebd9ed5870f92500682cab810bc91018e91b85006385bcae1
    # docker create -it cent6x86
        Error response from daemon: No command specified

2. 启动一个容器，让它在后台运行并且返回一个容器id
    # docker run -itd cent6x86 /bin/bash
    // 表示在后台启动一个容器，并且执行一些命令，-c有command的意思
    # docker images
    REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
    cent6x86            latest              a63844a74982        About an hour ago   323.9 MB
    changfeng/centos    latest              f2b5dce47f58        3 hours ago         273.9 MB
    cfcentos            latest              f2b5dce47f58        3 hours ago         273.9 MB
    centos              latest              eeb3a076a0be        4 weeks ago         196.7 MB
    centos_tag          latest              eeb3a076a0be        4 weeks ago         196.7 MB
    centos_tag_1        latest              eeb3a076a0be        4 weeks ago         196.7 MB
    # docker run  -itd centos_tag_1  /bin/bash -c "while :; do echo 123; sleep 2; done"

3. 使用attach的方式进入容器，但是这种方式有一个问题，如是退出后，就真的退出了（使用docker ps看不到了）
    # docker attach 4a9a0789b0c0

4. 在后台启动容器的时候并且给它自定义一个名字
    # docker run --name upload -itd changfeng/centos /bin/bash
    515827a86933c37ccdbecbb8d28ecb765381377a0ae3cb57c1b1f2e3c0eec0ca
    # docker ps
    CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES
    515827a86933        changfeng/centos    "/bin/bash"            5 seconds ago       Up 4 seconds                            upload       

5. --rm 可以让容器退出后直接删除，在这里命令执行完容器就会退出，不能和-d一起使用
    # docker run --rm -it centos bash -c "sleep 30"

6. 查看窗口的运行日志 
    # docker run -d centos bash -c "echo -e 'hello\nworld'; sleep 20;"
    99bddfa386b984157b31636247e6c3ed1cb307f27502145b79908a046c1d6360
    # docker logs 99
    hello
    world

