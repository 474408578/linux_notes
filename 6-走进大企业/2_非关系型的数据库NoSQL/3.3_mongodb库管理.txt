1. MongoDB库管理
db.version()  //查看版本
use userdb  //如果库存在就切换，不存在就创建
show dbs //查看库，此时userdb并没有出现，这是因为该库是空的，还没有任何集合，只需要创建一个集合就能看到了 
db.createCollection('clo1') //创建集合clo1，在当前库下面创建
db.dropDatabase() //删除当前库，要想删除某个库，必须切换到那个库下
db.stats()  //查看当前库的信息
db.serverStatus()   //查看mongodb服务器的状态

##############################################
> db.version()
3.0.11
> show db
DB(               DBCommandCursor(  DBPointer(        DBRef(
DBCollection(     DBExplainQuery(   DBQuery(          db
> show dbs;
admin  0.078GB
local  0.078GB
> use userdb
switched to db userdb
> db.createCollection('mycollection')
{ "ok" : 1 }
> show dbs
admin   0.078GB
local   0.078GB
userdb  0.078GB
> db.dropDatabase()
{ "dropped" : "userdb", "ok" : 1 }
> show dbs
admin  0.078GB
local  0.078GB
> db.stats()
{
    "db" : "userdb",
    "collections" : 0,
    "objects" : 0,
    "avgObjSize" : 0,
    "dataSize" : 0,
    "storageSize" : 0,
    "numExtents" : 0,
    "indexes" : 0,
    "indexSize" : 0,
    "fileSize" : 0,
    "ok" : 1
}
> use admin
switched to db admin
> db.stats()
{
    "db" : "admin",
    "collections" : 4,
    "objects" : 10,
    "avgObjSize" : 67.2,
    "dataSize" : 672,
    "storageSize" : 28672,
    "numExtents" : 4,
    "indexes" : 3,
    "indexSize" : 24528,
    "fileSize" : 67108864,
    "nsSizeMB" : 16,
    "extentFreeList" : {
    "num" : 0,
    "totalSize" : 0
    },
    "dataFileVersion" : {
    "major" : 4,
    "minor" : 22
    },
    "ok" : 1
}
##############################################

2. MongoDB创建集合
//语法：db.createCollection(name,options)
db.createCollection("mycol", { capped : true, autoIndexID : true, size : 6142800, max : 10000 } )  
    name就是集合的名字，options可选，用来配置集合的参数，参数如下
    capped true/false （可选）如果为true，则启用封顶集合。封顶集合是固定大小的集合，当它达到其最大大小，会自动覆盖最早的条目。如果指定true，则也需要指定尺寸参数。
    autoindexID  true/false （可选）如果为true，自动创建索引
    _id字段的默认值是false。
    size （可选）指定最大大小字节封顶集合。如果封顶如果是 true，那么你还需要指定这个字段。单位B
    max （可选）指定封顶集合允许在文件的最大数量。


3.  Mongaodb数据库管理
show collections //查看集合，或者使用show  tables
db.Account.insert({AccountID:1,UserName:"123",password:"123456"})  //如果集合不存在，直接插入数据，则mongodb会自动创建集合
db.Account.update({AccountID:1},{"$set":{"Age":20}}) //更新
db.Account.find()   //查看所有文档
db.Account.find({AccountID:1})   //根据条件查询
db.Account.remove({AccountID:1})  //根据条件删除
db.Account.drop() //删除所有文档，即删除集合
use dbname  //先进入对应的库
db.printCollectionStats()  // 然后查看集合状态

> db.createCollection('changfeng')
{ "ok" : 1 }
> show collections mycollection
changfeng
mycolloction
system.indexes
system.users
system.version

> db.Account.insert( { AccountID:1, UserName:"123", password:"123456" } )
WriteResult({ "nInserted" : 1 })
> show tables
Account
startup_log
system.indexes
> db.test_fieles.insert( { AccountID:2, Userlames:"132", password:"aaaaa"} )
WriteResult({ "nInserted" : 1 })
> show tables
Account
startup_log
system.indexes
test_fieles

> db.Account.insert( { AccountID:2, UserName:"aaaa", password:"1bbb456" } )
WriteResult({ "nInserted" : 1 })
> db.Account.find()
{ "_id" : ObjectId("571e0447d1d42e69733eef89"), "AccountID" : 1, "UserName" : "123", "password" : "123456" }
{ "_id" : ObjectId("571e050dd1d42e69733eef8b"), "AccountID" : 2, "UserName" : "aaaa", "password" : "1bbb456" }
> db.Account.find({Account:2})
    > db.Account.find({AccountID:2})
{ "_id" : ObjectId("571e050dd1d42e69733eef8b"), "AccountID" : 2, "UserName" : "aaaa", "password" : "1bbb456" }
> db.Account.find({UserName:aaaa})
    2016-04-25T19:53:42.849+0800 E QUERY    ReferenceError: aaaa is not defined
        at (shell):1:27
                   > db.Account.find({UserName:"aaaa"})
{ "_id" : ObjectId("571e050dd1d42e69733eef8b"), "AccountID" : 2, "UserName" : "aaaa", "password" : "1bbb456" }
> 

> db.Account.update( { AccountID:1 }, { "$set": UserName:"bbbb" } )
2016-04-25T19:56:09.321+0800 E QUERY    SyntaxError: Unexpected token :
> db.Account.update( { AccountID:1 }, { "$set":{ UserName:"bbbb" } } )
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.Account.find({AccountID:1})
{ "_id" : ObjectId("571e0447d1d42e69733eef89"), "AccountID" : 1, "UserName" : "bbbb", "password" : "123456" }
> 

> db.Account.find();
{ "_id" : ObjectId("571e0447d1d42e69733eef89"), "AccountID" : 1, "UserName" : "bbbb", "password" : "123456" }
{ "_id" : ObjectId("571e050dd1d42e69733eef8b"), "AccountID" : 2, "UserName" : "aaaa", "password" : "1bbb456" }
> db.Account.remove({AccountID:1})
    WriteResult({ "nRemoved" : 1 })
    > db.Account.find();
{ "_id" : ObjectId("571e050dd1d42e69733eef8b"), "AccountID" : 2, "UserName" : "aaaa", "password" : "1bbb456" }
> 
> db.Account.drop()
true
> db.Account.find();
> 

> db.printCollectionStats()
    startup_log
{
    "ns" : "local.startup_log",
    "count" : 2,
    "size" : 2448,
    "avgObjSize" : 1224,
    "numExtents" : 1,
    "storageSize" : 10485760,
    "lastExtentSize" : 10485760,
    "paddingFactor" : 1,
    "paddingFactorNote" : "paddingFactor is unused and unmaintained in 3.0. It remains hard coded to 1.0 for compatibility only.",
    "userFlags" : 1,
    "capped" : true,
    "max" : NumberLong("9223372036854775807"),
    "maxSize" : 10485760,
    "nindexes" : 1,
    "totalIndexSize" : 8176,
    "indexSizes" : {
    "_id_" : 8176
    },
    "ok" : 1
}
---
system.indexes
{
    "ns" : "local.system.indexes",
    "count" : 2,
    "size" : 224,
    "avgObjSize" : 112,
    "numExtents" : 1,
    "storageSize" : 8192,
    "lastExtentSize" : 8192,
    "paddingFactor" : 1,
    "paddingFactorNote" : "paddingFactor is unused and unmaintained in 3.0. It remains hard coded to 1.0 for compatibility only.",
    "userFlags" : 0,
    "capped" : false,
    "nindexes" : 0,
    "totalIndexSize" : 0,
    "indexSizes" : {

    },
    "ok" : 1
}
---
test_fieles
{
    "ns" : "local.test_fieles",
    "count" : 1,
    "size" : 112,
    "avgObjSize" : 112,
    "numExtents" : 1,
    "storageSize" : 8192,
    "lastExtentSize" : 8192,
    "paddingFactor" : 1,
    "paddingFactorNote" : "paddingFactor is unused and unmaintained in 3.0. It remains hard coded to 1.0 for compatibility only.",
    "userFlags" : 1,
    "capped" : false,
    "nindexes" : 1,
    "totalIndexSize" : 8176,
    "indexSizes" : {
    "_id_" : 8176
    },
    "ok" : 1
}
---
> 

