1. mongoDB副本集介绍
a. 早期版本使用master-slave，一主一从和MySQL类似，但slave在此架构中为只读，当主库宕机后，从库不能自动切换为主
b. 目前已经淘汰master-slave模式，改为副本集，这种模式下有一个主(primary)，和多个从(secondary)，只读。支持给它们设置权重，当主宕掉后，权重最高的从切换为主
c. 在此架构中还可以建立一个仲裁(arbiter)的角色，它只负责裁决，而不存储数据
d. 在此架构中读写数据都是在主上，要想实现负载均衡的目的需要手动指定读库的目标server

2. mongoDB副本集搭建
a. 环境准备：三台机器： 192.168.3.219（primary）   192.168.3.220（secondary)    192.168.3.221（secondary) 
编辑三台机器的配置文件，增加：
replication:
##oplog大小
  oplogSizeMB: 20
##复制集名称
  replSetName: aminglinux
如：
##########################################
## 注意格式，开头要空两格
replication:
  oplogSizeMB: 20
  replSetName: changfeng
##########################################
分别重启三台机器服务
b. 连接主，在主上运行命令mongo 
>use admin
>config={_id:"aminglinux",members:[{_id:0,host:"192.168.3.219:27017"},{_id:1,host:"192.168.3.220:27017"},{_id:2,host:"192.168.3.221:27017"}]}
>rs.initiate(config)
>rs.add("172.7.15.112")
>rs.add("172.7.15.101")
rs.status() //查看状态
    如果两个从上的状态为"stateStr" : "STARTUP", 则需要进行如下操作
    > var config={_id:"aminglinux",members:[{_id:0,host:"172.7.15.111:27017"},{_id:1,host:"172.7.15.112:27017"},{_id:2,host:"172.7.15.101:27017"}]}
    >rs.reconfig(config)
    此时再次查看rs.status()会发现从的状态变为SECONDARY

