1. 连接MongoDB
a. 在本机可以直接运行命令mongo进入到mongodb shell中
如果mongodb监听端口并不是默认的27017，则在连接的时候需要加--port 选项，例如
mongo --port 27018
b. 连接远程mongodb，需要加--host，例如
mongo --host  127.0.0.1
如果设置了验证，则在连接的时候需要带用户名和密码
mongo -uusername -ppasswd  //这个和MySQL挺像

2. Mongodb用户管理
a. 首先mongodb用户是针对库来的，建立用户时要先进入到对应的库里
use test  //切换到test库下
db.createUser({user:"admin",pwd:"123456",roles:[{role:'dbOwner',db:'userdb'}]}) 
use admin //切换到admin库
db.system.users.find()  //列出所有用户，需要切换到admin库
show users  //查看当前库下所有的用户
db.dropUser('admin') //删除用户
b. 关于用户角色，参考文档http://bbs.51cto.com/thread-1146654-1.html
开启认证。 http://theadorelee.com/index.php/archives/60.html 

> use test
switched to db test
> db.createUser({user:"admin",pwd:"admin",roles:[{role:'dbOwner',db:'userdb'}]})
Successfully added user: {
    "user" : "admin",
    "roles" : [
            {
                "role" : "dbOwner",
                "db" : "userdb"
            }
    ]
}
e admin
switched to db admin
> db.system.users.find()
{ "_id" : "test.admin", "user" : "admin", "db" : "test", "credentials" : { "SCRAM-SHA-1" : { "iterationCount" : 10000, "salt" : "RiGjfnnT2BIYc2bDQojTbQ==", "storedKey" : "HVU/2Qn2jrJsYqTD2qDXWaFnp/A=", "serverKey" : "6ELqjnBA+IurbmVhAepJn1R5S2w=" } }, "roles" : [ { "role" : "dbOwner", "db" : "userdb" } ] }
> show uses
2016-04-25T19:20:40.082+0800 E QUERY    Error: don't know how to show [uses]
    at Error (<anonymous>)
        at shellHelper.show (src/mongo/shell/utils.js:733:11)
        at shellHelper (src/mongo/shell/utils.js:524:36)
        at (shellhelp2):1:1 at src/mongo/shell/utils.js:733
                        > show users
                        > use test
                        switched to db test
                        > show users
{
        "_id" : "test.admin",
        "user" : "admin",
        "db" : "test",
        "roles" : [
                {
                     "role" : "dbOwner",
                     "db" : "userdb"
                }
            ]
}
e test
switched to db test
> show users
{
        "_id" : "test.admin",
        "user" : "admin",
        "db" : "test",
        "roles" : [
                {
                      "role" : "dbOwner",
                      "db" : "userdb"
                }
            ]
}
> db.dropUser('admin')
true
> show users
> use admin
switched to db admin
> db.system.users.find()

