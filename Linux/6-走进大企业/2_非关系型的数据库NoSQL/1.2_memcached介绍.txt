1. 介绍
　a、是国外社区网站LiveJournal团队开发，通过缓存数据查询结果，减少数据访问次数，从而提高动态web站点性能。
　b、官方站点：http://memcached.org/
　c、基于c／s架构，协议简单
　d、基于libevent的事件处理
　e、自主内存存储处理（slab allocation）
　f、数据过期处理方式：Lazy Expiration 和 LRU

2. Slab allocation
　a、Slab Allocation原理：将分配的内存分割成各种尺寸的块(chunk)，并把尺寸相同的块分成组（chunk的集合），每个chunk集合被称为slab
　b、memcached的内存分配以Page为单位，Page默认为１Ｍ，可以在启动时通过-I参数来指定
　c、slab是由多个Page组成的，Page按照指定的大小切割成多个chunk。
    slabs, pages and chunks
    Each slab has a counst size. When a slab need more memory, an available page will be assigned, and splited into correct size of the slab, which calls chunk. So slabs are consist of pages and pages consist of chunks. Chunk count of each page is defferent from each slab.

3. Growth factor
　a、memcached在启动时可以通过-f选项来指定growth　factor因子。该值控制chunk大小的差异。默认值为1.25
　b、通过memcached-tool查看指定memcached实例的不同slab状态，可以看到各item所占大小（chunk大小），差距为1.25
　c、命令 #memcached-tool 127.0.0.1:11211 display

4. Memcached数据过期方式
　a、Lazy Expiration
    memcached内部不会监视记录是否过期，而是在get的时候查看记录的时间戳，检查记录是否过期。这种技术称为lazy　expiration，因此memcached不会在过期监视上耗费cpu时间
　b、LRU
    memcached会优先使用已经超时的记录的空间，但即使如此，也会发生追加新记录时空间不足的情况，此时就要使用名为Least Reacent Used(LRU)机制来分配空间。顾名思义，这是删除“最近最少使用”的机制，因此，当内存不足时（无法从slab　class获取新的空间时），就从最近未被使用的记录中搜索，并将其分配给新的记录。从缓存的角度来看，应该模型十分理想。
