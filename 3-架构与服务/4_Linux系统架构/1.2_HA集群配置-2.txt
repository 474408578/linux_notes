1. 复制样本配置文件到/etc/ha.d/目录下
cp /usr/share/doc/heartbeat-3.0.4/{authkeys,ha.cf,haresources} /etc/ha.d/

2. 编辑/etc/ha.d/目录下的配置文件
cd /etc/ha.d/

vi authkeys
#其中crc是最简单的，sha1 HI是最复杂的，这里折中选择第３个
auth 3
#1 crc
#2 sha1 HI!
3 md5 Hello!

#修改authkeys文件的权限为600，不然heartbeat无法启动
chmod 600 /etc/ha.d/authkeys

#编辑haresources,如果需要添加多个服务，服务名之间用空格分割就可以
找到node1，替换为 MASTER.CF 192.168.3.200/24/eth0:0
nginx，从上面并不需要手动添加eth0:0相关的配置信息，如果主挂掉后，那么从会自己启动相应的服务和对应的vip
node1 10.7.8.100/24/eth0 httpd nginx
MASTER.CF为主的主机名
192.168.3.200是vip，后面要加上掩码
eth0:0表示使用那个接口作为vip

#编辑ha.cf文件，内容如下
#debugfile和logfile记录的内容是差不多的
debugfile /var/log/ha-debug 
logfile/var/log/ha-log
＃日志的级别
logfacilitylocal0
#表示每2秒就探测一次
keepalive 2
＃如果30秒探测不到，则认为死掉了
deadtime 30
＃如果10秒探测不到，则会产生警告信息到日志文件
warntime 10
＃考虑到从服务器重启可能需要一段时间，这里设置为120秒
initdead 120
＃设置心跳udp的端口
udpport694
＃这里时从服务器的ip地址，心跳接口
ucast eth0 192.168.3.175
＃如果主服务器正常后是否自动切回
auto_failback on
＃下面定义了两个节点，分别是主和从的hostname，这里的node和/etc/hosts中的是对应的
node MASTER.CF
node SLAVE.CF
＃这个ip地址作为判断两台机器是否可以连通的标准，中介地址
ping 192.168.3.1
＃表示一hacluster的身份运行后面的脚本，这个脚本主要时用来探测网络是否联通的，respawn的作用就是当后面的脚本进程死掉的时候自动激活，重新运行脚本
#　注意：如果是６４位系统，那么下面的可执行文件则在/usr/lib64/heartbeat/ipfail
respawn hacluster /usr/lib/heartbeat/ipfail

3. 复制配置文件到从服务器上
从服务器上的配置仅仅更改ha.cf这个配置文件就可以
debugfile /var/log/ha-debug
logfile/var/log/ha-log
logfacilitylocal0local0
keepalive 2
deadtime 30
warntime 10
initdead 120
udpport694694
＃这里的ip地址变为主服务器的ip地址
ucast eth0 192.168.3.173
auto_failback on
node MASTER.CF
node SLAVE.CF
ping 192.168.3.1
respawn hacluster /usr/lib/heartbeat/ipfail

4. 启动heartbeat，先启动主，再启动从

