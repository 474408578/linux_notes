http://it165.net/admin/html/201401/2248.html
centos6网卡配置文件、DNS相关的几个问题 http://www.apelearn.com/bbs/thread-8220-1-1.html
http://www.apelearn.com/bbs/forum.php?mod=viewthread&tid=10532&highlight=LVS
http://www.apelearn.com/bbs/thread-10536-1-1.html
https://www.zhihu.com/question/22315406
http://www.linuxvirtualserver.org/zh/lvs1.html

1、 LB集群这LVS介绍
	LB：Load Balance
	
2、常用软件
		nginx; 应用层
		lvs;网络层
		keepalived;
		F5;
		Netscale;
3、LVS的3种模式
	a、NAT
		yum install -y ipvsadm
	b、TUN
	c、DR [Direct Routing]
4、IPVS高度器的8种负载算法
针对不同的网络服务需求和服务器配置，IPVS调度器实现了如下八种负载调度算法：

    1、轮叫（Round Robin）
    调度器通过"轮叫"调度算法将外部请求按顺序轮流分配到集群中的真实服务器上，它均等地对待每一台服务器，而不管服务器上实际的连接数和系统负载。

    2、加权轮叫（Weighted Round Robin）
    调度器通过"加权轮叫"调度算法根据真实服务器的不同处理能力来调度访问请求。这样可以保证处理能力强的服务器处理更多的访问流量。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。

    3、最少链接（Least Connections）
    调度器通过"最少连接"调度算法动态地将网络请求调度到已建立的链接数最少的服务器上。如果集群系统的真实服务器具有相近的系统性能，采用"最小连接"调度算法可以较好地均衡负载。

    4、加权最少链接（Weighted Least Connections）
    在集群系统中的服务器性能差异较大的情况下，调度器采用"加权最少链接"调度算法优化负载均衡性能，具有较高权值的服务器将承受较大比例的活动连接负载。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。

    5、基于局部性的最少链接（Locality-Based Least Connections）
    "基于局部性的最少链接" 调度算法是针对目标IP地址的负载均衡，目前主要用于Cache集群系统。该算法根据请求的目标IP地址找出该目标IP地址最近使用的服务器，若该服务器 是可用的且没有超载，将请求发送到该服务器；若服务器不存在，或者该服务器超载且有服务器处于一半的工作负载，则用"最少链接"的原则选出一个可用的服务 器，将请求发送到该服务器。

    6、带复制的基于局部性最少链接（Locality-Based Least Connections with Replication）
    "带复制的基于局部性最少链接"调度算法也是针对目标IP地址的负载均衡，目前主要用于Cache集群系统。它与LBLC算法的不同之处是它要维护从一个 目标IP地址到一组服务器的映射，而LBLC算法维护从一个目标IP地址到一台服务器的映射。该算法根据请求的目标IP地址找出该目标IP地址对应的服务 器组，按"最小连接"原则从服务器组中选出一台服务器，若服务器没有超载，将请求发送到该服务器，若服务器超载；则按"最小连接"原则从这个集群中选出一 台服务器，将该服务器加入到服务器组中，将请求发送到该服务器。同时，当该服务器组有一段时间没有被修改，将最忙的服务器从服务器组中删除，以降低复制的 程度。

    7、目标地址散列（Destination Hashing）
    "目标地址散列"调度算法根据请求的目标IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。

    8、源地址散列（Source Hashing）
    "源地址散列"调度算法根据请求的源IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。

	
4、NAT模式
director端的配置
/usr/local/sbin/lvs_nat.sh
################# script start #######################
#!/bin/bash

# director服务器上开启路由转发功能
echo 1 > /proc/sys/net/ipv4/ip_forward

# 关闭icmp重定向功能
echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects 
echo 0 > /proc/sys/net/ipv4/conf/default/send_redirects 
echo 0 > /proc/sys/net/ipv4/conf/eth1/send_redirects 
echo 0 > /proc/sys/net/ipv4/conf/eth2/send_redirects

# director 设置防火墙功能
iptables -t nat -F
iptables -t nat -X
iptables -t nat -A POSTROUTING -s 192.168.3.0/24 -j MASQUERADE

# director设置ipvsadm, -t后面的ip地址为客户端真实访问的ip，-m表示使用iptables规则的masquerade动作，-r后面的ip地址为要转发到的ip地址
IPVSADM='/sbin/ipvsadm'
$IPVSADM -C
$IPVSADM -A -t 192.168.3.173:80 -s rr 
$IPVSADM -a -t 192.168.3.173:80 -r 192.168.3.175:80 -m 
$IPVSADM -a -t 192.168.3.173:80 -r 192.168.3.179:80 -m
####################### script ends... ##############################

# 查看已经添加的ipvsadm规则
ipvsadm -ln

#Real Server上的操作，需要把默认网关更改为Director的nat地址

