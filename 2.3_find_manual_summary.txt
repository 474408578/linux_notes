find
NAME
	find - search for file in directory hierarchy
SYNOPSIS
	find [-H] [-L] [-P] [-D debugopts] [-Olevel] [path...] [expression]
DESCRIPTION	
	This manual page documents the GNU version of find. GNU find search the directory tree rooted at each given file name by evaluating the given expresion from left to right, according to the rules of precedence (see section OPERATORS), until the outcome is know (the left hand side is false for and operation, true for or), at which point find moves on to the next file name.
	If you are using find in an environment where security is important (for example if you are using it to search directories that are writable by others), you should read the "Security Considerations" chapter of the findutils documentation, which is called Finding Files and comes with findutils. That documents also includes a lot more deatil and discussion than this manual page, so you may find it a more useful source of information.
OPTIONS 
EXPRESSIONS
	The expression is made up of options (which affect overall operation rather than the precessing of a specific file, and always return true),tests (which return a true of false value), all separated by operators, -and is assumed where the operator is omitted.
	-depth Process each directory's contents before the directory itself.
	-maxdepth levels
		Descend at most levels (a non-negative integer) levels of directories below the command line arguments. --maxdepth 0 means only applay the tests and actions to the command line arguments.
	-mindepth levels
	Do not applay any tests or actions at less levels (a non-gegative integer). -mindepth 1 means process all files except the command line arguments.
	-name pattern
		Base of file name (the path with leading directories removed) matches shell pattern patttern. The metacharacter ('*', '?', and '[]') match a '.' at the start of the base name (this is a change in findutils-4.2.2; see section STANDARDS CONFORMANCE below). To ignore a directory and the files under it, user -prune; See an example in the decription of -path Braces are not recognised as being special, despite the fact that some shells including Bash imbue braces with a special meaning in shell patterns. The filename matching is performed
		with the use of the fnmatch(3) library function. Don's forget to enclose the pattern in quotes in order to protect it from expasion by the shell.
	-perm 
	-user
	-group
	-mtime
	-atime
	-ctime
	-nogroup
	-nouser
	-newer file
		File was modified more recently than file. If file is a symbolic link and the -H option or the -L option is in effect, the modification time of the file it points to is always used.
	-type b/c/d/f/p/l
	-size
	-fstype
	-mount
	-fllow
	-prune
======================================================================================
